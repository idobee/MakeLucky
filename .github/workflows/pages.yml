name: Deploy to GitHub Pages

on:
  push:
    branches: [ master ]
  workflow_dispatch:

# Required for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # Prefer repository Variables; Secrets will be read in the write step if Variables are empty
      VITE_GOOGLE_ADSENSE_CLIENT_ID: ${{ vars.VITE_GOOGLE_ADSENSE_CLIENT_ID }}
      VITE_GOOGLE_ADSENSE_SLOT_ID: ${{ vars.VITE_GOOGLE_ADSENSE_SLOT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Write Vite env (production)
        env:
          GH_VAR_CLIENT: ${{ vars.VITE_GOOGLE_ADSENSE_CLIENT_ID }}
          GH_VAR_SLOT: ${{ vars.VITE_GOOGLE_ADSENSE_SLOT_ID }}
          GH_SECRET_CLIENT: ${{ secrets.VITE_GOOGLE_ADSENSE_CLIENT_ID }}
          GH_SECRET_SLOT: ${{ secrets.VITE_GOOGLE_ADSENSE_SLOT_ID }}
        run: |
          touch .env.production
          CLIENT_VAL="${GH_VAR_CLIENT:-${GH_SECRET_CLIENT}}"
          SLOT_VAL="${GH_VAR_SLOT:-${GH_SECRET_SLOT}}"
          if [ -n "${CLIENT_VAL}" ]; then echo "VITE_GOOGLE_ADSENSE_CLIENT_ID=${CLIENT_VAL}" >> .env.production; fi
          if [ -n "${SLOT_VAL}" ]; then echo "VITE_GOOGLE_ADSENSE_SLOT_ID=${SLOT_VAL}" >> .env.production; fi
          echo "Generated .env.production with available variables"

      - name: Debug variables presence (non-sensitive)
        run: |
          if [ -f .env.production ]; then grep -q "VITE_GOOGLE_ADSENSE_CLIENT_ID=" .env.production && echo "CLIENT_ID: present" || echo "CLIENT_ID: MISSING"; else echo ".env.production missing"; fi
          if [ -f .env.production ]; then grep -q "VITE_GOOGLE_ADSENSE_SLOT_ID=" .env.production && echo "SLOT_ID: present" || echo "SLOT_ID: MISSING"; fi

      - name: Build
        run: npm run build

      - name: SPA 404 fallback (optional)
        run: |
          if [ -f "dist/index.html" ]; then cp dist/index.html dist/404.html; fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
